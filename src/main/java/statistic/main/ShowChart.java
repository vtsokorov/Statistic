/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package statistic.main;

import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import statistic.main.chart.BarChart;
import statistic.main.chart.LineChart;

/**
 *
 * @author Progress
 */
public class ShowChart extends JDialog {

    private LineChart lineChart;
    private BarChart  barChart; 
    /**
     * Creates new form ShowChart
     */
    public ShowChart(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setSize(900, 700);
        CenterFrame();
        
    }
    
    private void CenterFrame()
    {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
    }
    
    public void showLineChart()
    {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>()
        {
            @Override
            protected Void doInBackground() throws Exception 
            {
                try {
                    lineChart = new LineChart(chartPanel);
                } catch (Exception ex) {
                    showWarningMsg("Error: "+ex.getMessage());
                }
                return null;
            }
            
            protected void done()
            {
                chartPanel.repaint();
                chartPanel.updateUI();
            }
         };

       
        worker.execute(); 
        this.setVisible(true);
    }
    
    public void showBarChart()
    {
        SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>()
        {
            @Override
            protected Void doInBackground() throws Exception 
            {
                try {
                    barChart = new BarChart(chartPanel);
                } catch (Exception ex) {
                    showWarningMsg("Error: "+ex.getMessage());
                }
                return null;
            }
            
            protected void done()
            {
                chartPanel.repaint();
                chartPanel.updateUI();
            }
         };

       
        worker.execute(); 
        this.setVisible(true);
    }
    
    public static void showWarningMsg(String text)
    {
        JOptionPane optionPane = new JOptionPane(text, JOptionPane.WARNING_MESSAGE);
        JDialog dialog = optionPane.createDialog("Warning!");
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        chartPanel.setLayout(new javax.swing.BoxLayout(chartPanel, javax.swing.BoxLayout.LINE_AXIS));
        getContentPane().add(chartPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    // End of variables declaration//GEN-END:variables
}
